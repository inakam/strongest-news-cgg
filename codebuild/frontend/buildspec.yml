version: 0.1

phases:
  pre_build:
    commands:
      - echo Logging in to Amazon ECR...
      - $(aws ecr get-login --region $AWS_DEFAULT_REGION --no-include-email)
      - echo "REACT_APP_BACKEND_API_ENDPOINT=${REACT_APP_BACKEND_API_ENDPOINT}" > docker-images-react/.env
  build:
    commands:
      - echo Build started on `date`
      - echo Building the Docker image...
      - docker build -f codebuild/Dockerfile-react-codepipeline -t $IMAGE_REPO_NAME_REACT .
      - docker tag $IMAGE_REPO_NAME_REACT:$IMAGE_TAG $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$IMAGE_REPO_NAME_REACT:$IMAGE_TAG
  post_build:
    commands:
      - echo Build completed on `date`
      - echo Pushing the Docker image...
      - docker push $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$IMAGE_REPO_NAME_REACT:$IMAGE_TAG >> imageDetail.json
      - aws ecs describe-task-definition --task-definition $TASK_FAMILY | jq '.taskDefinition | (.containerDefinitions[] | select(.name == "app") | .image) = "<APP_IMAGE>" | del(.taskDefinitionArn, .revision, .status, .requiresAttributes) ' > taskdef.json
      - cat codebuild/frontend/appspec.yaml
artifacts:
  files:
    - codebuild/frontend/appspec.yaml
    - imageDetail.json
    - taskdef.json
  discard-paths: yes